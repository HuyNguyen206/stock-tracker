<?php

namespace Tests\UseCases;

use App\Models\History;
use App\Models\Product;
use App\Models\Stock;
use App\Notifications\ImportantUpdateProduct;
use App\UseCases\TrackStock;
use Database\Seeders\RetailWithProductSeeder;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\Notification;
use Tests\TestCase;

/**
 *
 */
class TrackStockTest extends TestCase
{
    use RefreshDatabase;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->seed(RetailWithProductSeeder::class);
        Notification::fake();
        $this->mockRetailRequest();
        (new TrackStock(Stock::first()))->handle();
    }


    /**
     * A basic feature test example.
     *
     * @return void
     */
    public function test_it_notify_the_user()
    {
        Notification::assertSentTimes(ImportantUpdateProduct::class, 1);
    }


    /**
     * @return void
     */
    public function test_it_refresh_the_stock_local()
    {
        $this->assertDatabaseHas('stocks', [
            'price' =>  29999,
            'in_stock' => true
        ]);
    }

    public function test_it_record_to_history()
    {
        $this->assertEquals(1, History::count());

        tap(History::first(), function ($record) {
           $this->assertEquals($record->price, 29999);
            $this->assertEquals($record->in_stock, true);
        });
    }
}
